/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ (() => {

eval("\r\nvar _a, _b;\r\n// the size of each cell on the board\r\nvar CELL_SIZE = 15;\r\n// classnames for cells\r\nvar CELL_SELECTED = \"selected\";\r\nvar CELL_UNSELECTED = \"unselected\";\r\nvar CELL_TO_SELECT = \"to_select\";\r\nvar CELL_TO_UNSELECT = \"to_unselect\";\r\nvar MOUSE_LEFT = 0;\r\nvar MOUSE_RIGHT = 2;\r\nvar mouse_down = [false, false, false];\r\n// to keep track of running state of game\r\nvar timer;\r\nvar running = false;\r\n// the speed of the game\r\nvar SPEED = 1000;\r\nvar slider = document.getElementById(\"speed\");\r\nif (slider) {\r\n    slider.oninput = function () {\r\n        var _a, _b;\r\n        SPEED = parseInt((_a = slider) === null || _a === void 0 ? void 0 : _a.value, 10);\r\n        document.getElementById(\"tickrate\").innerHTML =\r\n            \"Tickrate: \" + ((_b = slider) === null || _b === void 0 ? void 0 : _b.value) + \"ms\";\r\n    };\r\n}\r\ndocument.body.onmousedown = function (e) {\r\n    mouse_down[e.button] = true;\r\n};\r\ndocument.body.onmouseup = function (e) {\r\n    mouse_down[e.button] = false;\r\n};\r\n(_a = document.getElementById(\"start\")) === null || _a === void 0 ? void 0 : _a.addEventListener(\"click\", function () {\r\n    running = true;\r\n    timer = setInterval(run, SPEED);\r\n});\r\n(_b = document.getElementById(\"stop\")) === null || _b === void 0 ? void 0 : _b.addEventListener(\"click\", function () {\r\n    running = false;\r\n    clearInterval(timer);\r\n});\r\n// prevent right-click menu\r\nwindow.addEventListener(\"contextmenu\", function (e) { return e.preventDefault(); });\r\nwindow.onload = function (e) {\r\n    var board = document.getElementById(\"board\");\r\n    var board_width = board.clientWidth;\r\n    var board_height = board.clientHeight;\r\n    var num_rows = board_height / CELL_SIZE;\r\n    var num_cols = board_width / CELL_SIZE;\r\n    // create the board with specified number of rows and columns\r\n    create_board(board, num_rows, num_cols);\r\n};\r\nfunction create_board(board, num_rows, num_cols) {\r\n    // make the table and add it to page\r\n    var table = document.createElement(\"table\");\r\n    table.id = \"table\";\r\n    board.appendChild(table);\r\n    // add all the cells to the board\r\n    for (var i = 0; i < num_rows; i++) {\r\n        // insert new row\r\n        var row = table.insertRow();\r\n        row.id = \"row \" + i;\r\n        var _loop_1 = function (j) {\r\n            // insert the cell\r\n            var cell = row.insertCell();\r\n            cell.id = i + \" \" + j;\r\n            // specify the class as unselected first\r\n            cell.className = CELL_UNSELECTED;\r\n            // if the cell is clicked, change state to selected\r\n            cell.onmouseover = function (e) {\r\n                if (mouse_down[MOUSE_LEFT]) {\r\n                    cell.className = CELL_SELECTED;\r\n                }\r\n                else if (mouse_down[MOUSE_RIGHT]) {\r\n                    cell.className = CELL_UNSELECTED;\r\n                }\r\n            };\r\n            cell.onmousedown = function (e) {\r\n                if (e.button == MOUSE_LEFT) {\r\n                    cell.className = CELL_SELECTED;\r\n                }\r\n                else if (e.button == MOUSE_RIGHT) {\r\n                    cell.className = CELL_UNSELECTED;\r\n                }\r\n            };\r\n        };\r\n        for (var j = 0; j < num_cols; j++) {\r\n            _loop_1(j);\r\n        }\r\n    }\r\n}\r\n// run the game of life\r\nfunction run() {\r\n    var table = document.getElementById(\"table\");\r\n    var num_rows = table.rows.length;\r\n    var num_cols = table.rows[0].cells.length;\r\n    for (var i = 0; i < num_rows; i++) {\r\n        for (var j = 0; j < num_cols; j++) {\r\n            var num_neighbours = 0;\r\n            if (i == 0) {\r\n                if (j == 0) {\r\n                    if (table.rows[i].cells[j + 1].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                    if (table.rows[i + 1].cells[j + 1].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                    if (table.rows[i + 1].cells[j].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                }\r\n                else if (j == num_cols - 1) {\r\n                    if (table.rows[i].cells[j - 1].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                    if (table.rows[i + 1].cells[j - 1].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                    if (table.rows[i + 1].cells[j].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                }\r\n                else {\r\n                    if (table.rows[i].cells[j - 1].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                    if (table.rows[i].cells[j + 1].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                    if (table.rows[i + 1].cells[j - 1].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                    if (table.rows[i + 1].cells[j].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                    if (table.rows[i + 1].cells[j + 1].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                }\r\n            }\r\n            else if (i == num_rows - 1) {\r\n                if (j == 0) {\r\n                    if (table.rows[i - 1].cells[j].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                    if (table.rows[i - 1].cells[j + 1].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                    if (table.rows[i].cells[j + 1].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                }\r\n                else if (j == num_cols - 1) {\r\n                    if (table.rows[i - 1].cells[j].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                    if (table.rows[i - 1].cells[j - 1].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                    if (table.rows[i].cells[j - 1].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                }\r\n                else {\r\n                    if (table.rows[i].cells[j - 1].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                    if (table.rows[i].cells[j + 1].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                    if (table.rows[i - 1].cells[j - 1].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                    if (table.rows[i - 1].cells[j].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                    if (table.rows[i - 1].cells[j + 1].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                }\r\n            }\r\n            else {\r\n                if (j == 0) {\r\n                    if (table.rows[i - 1].cells[j].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                    if (table.rows[i + 1].cells[j].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                    if (table.rows[i - 1].cells[j + 1].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                    if (table.rows[i].cells[j + 1].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                    if (table.rows[i + 1].cells[j + 1].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                }\r\n                else if (j == num_cols - 1) {\r\n                    if (table.rows[i - 1].cells[j].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                    if (table.rows[i + 1].cells[j].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                    if (table.rows[i + 1].cells[j - 1].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                    if (table.rows[i].cells[j - 1].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                    if (table.rows[i - 1].cells[j - 1].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                }\r\n                else {\r\n                    if (table.rows[i - 1].cells[j - 1].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                    if (table.rows[i - 1].cells[j].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                    if (table.rows[i - 1].cells[j + 1].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                    if (table.rows[i].cells[j - 1].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                    if (table.rows[i].cells[j + 1].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                    if (table.rows[i + 1].cells[j - 1].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                    if (table.rows[i + 1].cells[j].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                    if (table.rows[i + 1].cells[j + 1].className == CELL_SELECTED)\r\n                        num_neighbours++;\r\n                }\r\n            }\r\n            if (num_neighbours == 1 || num_neighbours == 0 || num_neighbours >= 4) {\r\n                table.rows[i].cells[j].setAttribute(CELL_TO_UNSELECT, \"true\");\r\n            }\r\n            else if (num_neighbours == 3) {\r\n                table.rows[i].cells[j].setAttribute(CELL_TO_SELECT, \"true\");\r\n            }\r\n        }\r\n    }\r\n    update_cells(table, num_rows, num_cols);\r\n}\r\nfunction update_cells(table, num_rows, num_cols) {\r\n    for (var i = 0; i < num_rows; i++) {\r\n        for (var j = 0; j < num_cols; j++) {\r\n            var cell = table.rows[i].cells[j];\r\n            if (cell.hasAttribute(CELL_TO_SELECT)) {\r\n                cell.removeAttribute(CELL_TO_SELECT);\r\n                cell.className = CELL_SELECTED;\r\n            }\r\n            else if (cell.hasAttribute(CELL_TO_UNSELECT)) {\r\n                cell.removeAttribute(CELL_TO_UNSELECT);\r\n                cell.className = CELL_UNSELECTED;\r\n            }\r\n        }\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://life/./src/index.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.ts"]();
/******/ 	
/******/ })()
;